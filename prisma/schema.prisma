// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id            Int           @id @default(autoincrement())
  name          String
  description   String?
  subcategories Subcategory[]
  createdDate   DateTime      @default(now())
  updatedDate   DateTime      @updatedAt
}

model Subcategory {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  Int
  products    Product[]
  createdDate DateTime  @default(now())
  updatedDate DateTime  @updatedAt
}

model Product {
  id                    Int                     @id @default(autoincrement())
  name                  String
  description           String?
  price                 Float
  subcategory           Subcategory             @relation(fields: [subcategoryId], references: [id], onDelete: Cascade)
  subcategoryId         Int
  FeaturedProduct       FeaturedProduct[]
  SecondFeaturedProduct SecondFeaturedProduct[]
  createdDate           DateTime                @default(now())
  updatedDate           DateTime                @updatedAt
}

model FeaturedProduct {
  id        Int     @id @default(autoincrement())
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model SecondFeaturedProduct {
  id        Int     @id @default(autoincrement())
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}
